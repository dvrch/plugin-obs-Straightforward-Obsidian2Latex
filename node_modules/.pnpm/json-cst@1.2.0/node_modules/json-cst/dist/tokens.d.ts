import type { LexerTokens, AnyPrimitiveToken, WhitespaceToken, LexerToken } from 'json-lexer';
import type { TokensWithOffset, TokenWithOffset } from './types.js';
export declare function decorateOffsets(tokens: LexerTokens): TokensWithOffset;
export declare function isPrimitiveToken(token: LexerToken): token is AnyPrimitiveToken;
export interface JumpedWhitespace {
    inc: 0 | 1;
    whitespaceToken?: TokenWithOffset<WhitespaceToken>;
}
/**
 * Returns 1 and the whitespace token, or 0
 */
export declare function jumpWhitespace(tokens: TokensWithOffset, pos: number): JumpedWhitespace;
export interface NextToken extends Omit<JumpedWhitespace, 'inc'> {
    token: TokenWithOffset;
    consumedTokens: number;
}
export declare function extractNextToken(tokens: TokensWithOffset, pos: number): NextToken;
export declare function nextNonWhitespaceToken(tokens: TokensWithOffset, pos: number): TokenWithOffset;
